apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion 28
  defaultConfig {
    applicationId "space.ersan.movlan"
    minSdkVersion 21
    targetSdkVersion 28
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    android.defaultConfig.resValue "string", "movie_db_api_key", getMovieApiKey()
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    debug {
      applicationIdSuffix = '.debug'
      versionNameSuffix = '-debug'
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  sourceSets {
    androidTest.java.srcDirs += "src/test-shared/java"
    test.java.srcDirs += "src/test-shared/java"
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.1"

  def androidx_version = "1.0.0"
  implementation "androidx.appcompat:appcompat:1.0.2"
  implementation "com.google.android.material:material:$androidx_version"
  implementation "androidx.vectordrawable:vectordrawable:1.0.1"
  implementation "androidx.cardview:cardview:$androidx_version"
  implementation "androidx.core:core-ktx:1.0.1"
  implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'

  def room_version = "2.1.0-alpha02"
  implementation "androidx.room:room-runtime:$room_version"
  kapt "androidx.room:room-compiler:$room_version"

  def lifecycle_version = "2.0.0"
  implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
  kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

  def paging_version = "2.1.0-beta01"
  implementation "androidx.paging:paging-runtime-ktx:$paging_version"

  def navigation_version = "1.0.0-alpha07"
  implementation "android.arch.navigation:navigation-fragment-ktx:$navigation_version"
  implementation "android.arch.navigation:navigation-ui-ktx:$navigation_version"

  def retrofit_version = "2.4.0"
  implementation 'com.squareup.okhttp3:okhttp:3.10.0'
  implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
  implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
  implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
  implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

  def glide_version = "4.8.0"
  implementation "com.github.bumptech.glide:glide:$glide_version"
  kapt "com.github.bumptech.glide:compiler:$glide_version"

  def dagger_version = "2.16"
  implementation "com.google.dagger:dagger:$dagger_version"
  kapt "com.google.dagger:dagger-compiler:$dagger_version"

  // Android Testing Support Library's runner and rules
  def atsl_runner_version = "1.1.0-alpha4"
  androidTestImplementation "androidx.test:runner:$atsl_runner_version"
  androidTestImplementation "androidx.test:rules:$atsl_runner_version"
  androidTestImplementation "androidx.test.ext:junit:1.0.0"
  androidTestImplementation "androidx.test:core:1.0.0"

  def arch_core_version = "2.0.0"
  androidTestImplementation "androidx.arch.core:core-testing:$arch_core_version"

  def junit_version = "4.12"
  androidTestImplementation "junit:junit:$junit_version"
  androidTestImplementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"
  androidTestImplementation "org.mockito:mockito-core:2.23.0"
  androidTestImplementation "org.mockito:mockito-android:2.23.0"

  testImplementation "junit:junit:$junit_version"
  testImplementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"
  testImplementation "androidx.arch.core:core-testing:$arch_core_version"
  testImplementation "org.mockito:mockito-core:2.23.0"

}

def getMovieApiKey(){
  def systemApiKey = System.getenv("MOVIE_DB_API_KEY")
  if(!systemApiKey){
    def properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    systemApiKey = properties.getProperty("MOVIE_DB_API_KEY")
  }
  if(!systemApiKey){
    systemApiKey = "5d66a45677199ff38b6070adc8141e75" //Temporary
  }
  systemApiKey
}